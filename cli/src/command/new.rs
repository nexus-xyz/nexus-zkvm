use std::{fs, io::Write, path::PathBuf};

use anyhow::Context;
use clap::Args;

use crate::utils::cargo;

#[derive(Debug, Args)]
pub struct NewArgs {
    #[arg(name = "path")]
    pub path: PathBuf,
}

pub fn handle_command(args: NewArgs) -> anyhow::Result<()> {
    let path = args.path;

    setup_crate(path)
}

fn setup_crate(path: PathBuf) -> anyhow::Result<()> {
    let path_str = path.to_str().context("path is not a valid UTF-8 string")?;

    // run cargo to setup project
    cargo(None, ["new", path_str])?;
    cargo(
        Some(&path),
        [
            "add",
            "--git",
            "https://github.com/nexus-xyz/nexus-zkvm.git",
            "nexus-rt",
        ],
    )?;

    let mut fp = fs::OpenOptions::new()
        .append(true)
        .open(path.join("Cargo.toml"))?;

    writeln!(
        fp,
        concat!(
            "\n",
            "# Generated by nexus-tools, do not remove!\n",
            "#\n",
            "# This profile is used for generating proofs, as Nexus VM support for compiler optimizations is still under development.\n",
            "[profile.release-unoptimized]\n",
            "inherits = \"release\"\n",
            "opt-level = 0"
        )
    )?;

    // .cargo/config.toml
    let config_path = path.join(".cargo");
    fs::create_dir_all(&config_path)?;
    fs::write(config_path.join("config.toml"), TEMPLATE_CARGO_CONFIG)?;

    // src/main.rs
    fs::write(path.join("src/main.rs"), TEMPLATE_SRC_MAIN)?;
    fs::write(path.join("rust-toolchain.toml"), RUST_TOOLCHAIN)?;

    Ok(())
}

macro_rules! examples_dir {
    () => {
        concat!(env!("CARGO_MANIFEST_DIR"), "/../examples")
    };
}

const TEMPLATE_CARGO_CONFIG: &str = r#"[target.riscv32i-unknown-none-elf]
rustflags = [
  "-C", "link-arg=-Tlink.x",
]
runner="nexus-run"
"#;
const TEMPLATE_SRC_MAIN: &str = include_str!(concat!(examples_dir!(), "/src/main.rs"));

// freeze toolchain that works with all provers
const RUST_TOOLCHAIN: &str = r#"[toolchain]
channel = "1.77.0"
targets = ["riscv32i-unknown-none-elf"]
"#;
