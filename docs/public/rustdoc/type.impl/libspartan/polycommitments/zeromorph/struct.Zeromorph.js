(function() {var type_impls = {
"nexus_sdk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PolyCommitmentScheme%3C%3CE+as+Pairing%3E::G1%3E-for-Zeromorph%3CE%3E\" class=\"impl\"><a href=\"#impl-PolyCommitmentScheme%3C%3CE+as+Pairing%3E::G1%3E-for-Zeromorph%3CE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt; for Zeromorph&lt;E&gt;<span class=\"where fmt-newline\">where\n    E: Pairing,</span></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.PolyCommitmentKey\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PolyCommitmentKey\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PolyCommitmentKey</a> = ZeromorphCommitterKey&lt;E&gt;</h4></section><section id=\"associatedtype.EvalVerifierKey\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EvalVerifierKey\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">EvalVerifierKey</a> = ZeromorphVerifierKey&lt;E&gt;</h4></section><section id=\"associatedtype.Commitment\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Commitment\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Commitment</a> = ZeromorphCommitment&lt;E&gt;</h4></section><section id=\"associatedtype.SRS\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SRS\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SRS</a> = ZeromorphSRS&lt;E&gt;</h4></section><section id=\"associatedtype.PolyCommitmentProof\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PolyCommitmentProof\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PolyCommitmentProof</a> = ZeromorphProof&lt;E&gt;</h4></section><section id=\"method.commit\" class=\"method trait-impl\"><a href=\"#method.commit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit</a>(\n    poly: &amp;DensePolynomial&lt;&lt;E as Pairing&gt;::ScalarField&gt;,\n    ck: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::PolyCommitmentKey\n) -&gt; &lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::Commitment</h4></section><section id=\"method.prove\" class=\"method trait-impl\"><a href=\"#method.prove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prove</a>(\n    C: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::Commitment&gt;,\n    poly: &amp;DensePolynomial&lt;&lt;E as Pairing&gt;::ScalarField&gt;,\n    u: &amp;[&lt;E as Pairing&gt;::ScalarField],\n    eval: &amp;&lt;E as Pairing&gt;::ScalarField,\n    ck: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::PolyCommitmentKey,\n    transcript: &amp;mut <a class=\"struct\" href=\"https://docs.rs/merlin/3.0.0/merlin/transcript/struct.Transcript.html\" title=\"struct merlin::transcript::Transcript\">Transcript</a>\n) -&gt; &lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::PolyCommitmentProof</h4></section><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>(\n    commitment: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::Commitment,\n    proof: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::PolyCommitmentProof,\n    vk: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::EvalVerifierKey,\n    transcript: &amp;mut <a class=\"struct\" href=\"https://docs.rs/merlin/3.0.0/merlin/transcript/struct.Transcript.html\" title=\"struct merlin::transcript::Transcript\">Transcript</a>,\n    u: &amp;[&lt;E as Pairing&gt;::ScalarField],\n    eval: &amp;&lt;E as Pairing&gt;::ScalarField\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, PCSError&gt;</h4></section><section id=\"method.setup\" class=\"method trait-impl\"><a href=\"#method.setup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">setup</a>(\n    max_num_poly_vars: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>,\n    _label: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    rng: &amp;mut impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::SRS, Error&gt;</h4></section><section id=\"method.trim\" class=\"method trait-impl\"><a href=\"#method.trim\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trim</a>(\n    srs: &amp;&lt;Zeromorph&lt;E&gt; as PolyCommitmentScheme&lt;&lt;E as Pairing&gt;::G1&gt;&gt;::SRS,\n    supported_num_vars: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>\n) -&gt; PCSKeys&lt;&lt;E as Pairing&gt;::G1, Zeromorph&lt;E&gt;&gt;</h4></section></div></details>","PolyCommitmentScheme<<E as Pairing>::G1>","nexus_sdk::hypernova::seq::SRS"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()